<apex:page docType="html-5.0">
	
	    <style>
	    #AccountTable, #AccountTable th, #AccountTable td {
	        border: 1px solid black;
	        border-collapse: collapse;
	    }
	    #AccountTable thead {
	        font-weight: bold;
	    }
	    #AccountTable {
	        width: 100%;
	    }
	    #pageButtons {
	        text-align: center;
	        padding: 20px 0px;
	    }
	    button[disabled=disabled], button:disabled {
	        border-color: #c4c4c4;
	        color: #909090;
	    }
	    </style>
	    
	    <!-- Remote Objects definition to set accessible sObjects and fields -->
	    <apex:remoteObjects >
	        <apex:remoteObjectModel name="Account" jsShorthand="sAccount" 
	            fields="Name,Id,Phone,BillingCity,BillingState">
	            <apex:remoteObjectField name="Active__c" jsShorthand="Active"/>
	        </apex:remoteObjectModel>
	    </apex:remoteObjects>
	
	    <!-- JavaScript to make Remote Objects calls -->
	    <script>
	        // define and initialize page scope variables
	        var RecordOffset = 0;
	        var PageSize = 10;
	        
	        // attach init() to the load event; cross-browser compatible  
	        if(window.attachEvent){
	       		 window.attachEvent('onload', init);
	        }else if(window.addEventListener){
	        	window.addEventListener('load', init, false);
	        }else{
	        	document.addEventListener('load', init, false);
	       	}
	
	        // run initial load of accounts
	        function init() {
	            fetchAccounts('start');
	        }
	
	        // fetch and load accounts into the page
	        var fetchAccounts = function(Direction) {
	            // adjust offset based on how the function is called
	            switch(Direction) {
	                case 'next':
	                    RecordOffset += PageSize;
	                    break;
	                case 'back':
	                    RecordOffset -= PageSize;
	                    break;
	                case 'start':
	                    disableBack(true);
	                    break;
	            }
	
	            // create a new Remote Object
	            var ac = new SObjectModel.sAccount();
	            
	            // create JSON object with query parameters
	            var QueryParam = { orderby: [ {Name: 'ASC'} ], limit: PageSize };
	            
	            // add offset property separately and only when the record offset is greater than 0 
	            // because the first record would be skipped at offset 1 and offset 0 is invalid
	            if (RecordOffset > 0) {
	                QueryParam.offset = RecordOffset;
	            } else {
	                RecordOffset = 0;
	            }
	            
	            // Use the Remote Object retrieve command to query accounts
	            ac.retrieve(
	                QueryParam,
	            function(err, records, event) {
	                loadRows(err, records, event);
	            });
	        };
	        
	        // reload html table with rows of account information
	        function loadRows(err, records, event) {
	            if(err) {
	                alert(err.message);
	            } else {
	                var tableBody = document.getElementById("AccountTableBody");
	                tableBody.innerHTML = "";
	
	                records.forEach(function(record) {
	                    // Add the line item to the warehouses list
	                    // there is probably a more efficient way to do this
	                    var row = tableBody.insertRow();
	                    var cell0 = row.insertCell(0);
	                    var cell1 = row.insertCell(1);
	                    var cell2 = row.insertCell(2);
	                    var cell3 = row.insertCell(3);
	                    var cell4 = row.insertCell(4);
	                    
	                    if(record.get("Name") != null && record.get("Name") != 'undefined'){
	                    	cell0.innerHTML = record.get("Name");
	                    }else{
	                    	cell0.innerHTML = '';
	                    }
	                    
	                    if(record.get("Phone") != null && record.get("Phone") != 'undefined'){
	                    	cell1.innerHTML = record.get("Phone");
	                    }else{
	                    	cell1.innerHTML = '';
	                    }
	                    
	                    if(record.get("BillingCity") != null && record.get("BillingCity") != 'undefined'){
	                    	cell2.innerHTML = record.get("BillingCity");
	                    }else{
	                    	cell2.innerHTML = '';
	                    }
	                    
	                    if(record.get("BillingState") != null && record.get("BillingState") != 'undefined'){
	                    	cell3.innerHTML = record.get("BillingState");
	                    }else{
	                    	cell3.innerHTML = '';
	                    }
	                    
	                    if(record.get("Active") != null && record.get("Active") != 'undefined'){
	                    	cell4.innerHTML = record.get("Active");
	                    }else{
	                    	cell4.innerHTML = '';
	                    }
	                    
	                });
	                
	                // disable next when records retrieved are less than the page size
	                // we know there are no more accounts to query
	                if (records.length != PageSize) {
	                    disableNext(true);
	                } else { 
	                    disableNext(false);
	                }
	                // enable back when we are past the first page
	                if (RecordOffset >= PageSize) {
	                    disableBack(false);
	                } else {
	                    disableBack(true);
	                }
	            }
	        }
	        
	        // toggle Back button
	        function disableBack(IsDisabled) {
	            var btnBack = document.getElementById("btnBack");
	            btnBack.disabled = IsDisabled;
	        }
	        
	        // toggle Next button
	        function disableNext(IsDisabled) {
	            var btnNext = document.getElementById("btnNext");
	            btnNext.disabled = IsDisabled;
	        }
	        
	    </script>
	
		<div style="padding-top:20px;text-align: center;">
        	<h1 style="font-size:20px;"><u>Retrieve Accounts via Remote Objects</u></h1>
       	</div>
	    <div id="pageButtons" >
	      <button id="btnBack" onclick="fetchAccounts('back')">Back</button>
	      <button id="btnNext" onclick="fetchAccounts('next')">Next</button>
	    </div>
	
	    <table id="AccountTable">
	      <thead>
	         <tr>
	            <td>{!$ObjectType.Account.Fields.Name.Label}</td>
	            <td>{!$ObjectType.Account.Fields.Phone.Label}</td>
	            <td>{!$ObjectType.Account.Fields.BillingCity.Label}</td>
	            <td>{!$ObjectType.Account.Fields.BillingState.Label}</td>
	            <td>{!$ObjectType.Account.Fields.Active__c.Label}</td>
	         </tr>
	      </thead>
	      <tbody id="AccountTableBody">
	      </tbody>
	    </table>
	
</apex:page>